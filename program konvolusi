import numpy as np

# 1. Inisialisasi variabel
H = np.array([[1, 1, 1],  # Contoh filter: Deteksi tepi Sobel sederhana
              [1, 4, 1],
              [1, 1, 1]])

# Contoh input matriks/gambar 5x5 (asumsikan gambar grayscale)
X = np.array([[0, 0, 0, 0, 0, 0],
              [0, 1, 0, 0, 0, 0],
              [0, 1, 1, 1, 0, 0],
              [0, 1, 1, 1, 0, 0],
              [0, 1, 0, 0, 0, 0],
              [0, 0, 0, 0, 0, 0]])

# 2. Inisialisasi matriks output Y dengan ukuran yang sesuai
output_height = X.shape[0] - H.shape[0] + 1
output_width = X.shape[1] - H.shape[1] + 1
Y = np.zeros((output_height, output_width))

# 3. Implementasi konvolusi 2D berdasarkan algoritma
for x in range(output_width):
    for y in range(output_height):
        z = 0  # Inisialisasi akumulator
        for k1 in range(H.shape[0]):
            for k2 in range(H.shape[1]):
                z += H[k1, k2] * X[x + k1, y + k2]  # Konvolusi
        Y[x, y] = z  # Simpan hasil konvolusi di Y

# 4. Cetak hasilnya
print("Input Image (X):")
print(X)
print("\nKernel/Filter (H):")
print(H)
print("\nOutput Image (Y):")
print(Y)
